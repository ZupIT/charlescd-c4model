@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()

Container(ui, "CharlesCD-UI", "ReacjJS, Typescript", "Web Application: Product's interface")
Container(moove_database, "Moove Database", "Postgres", "Process and stores information about users, applications and configurations in general in the database. It orchestrates the requests for other applications.")
Container(git_api, "Git API", "Rest API", "Search for repositories resources.")
Container(idm, "IDM", "Keycloack", "Manages and authenticates users.")
Container(prometheus, "Prometheus", "System Monitoring", "Collects and stores Charles metrics.")
Container(keycloack_api, "Keycloack API", "Rest API", "Manages and authenticates users on Keycloack.")
Container(circle_matcher_api, "Circle Matcher API", "Rest API", "Manages and discovers circles.")
Container(butler_api, "Butler API", "Rest API", "Performs deployment processes.")
Container(hermes_api, "Hermes API", "Rest API", "Manages and notifies webhook events.")
Container(villager_api, "Villager API", "Rest API", "Validates the image's tags name.") 


Container_Boundary(charlescd_moove, "CharlesCD Moove"){
   
    Component(module_web, "Web", "Component", "It has the application launcher and CORS configuration.")
    Component(module_api, "Api", "Component", "Services layer.")
    Component(module_application, "Application", "Component", "Application layer.")
    Component(module_domain, "Domain", "Component", "Domain layer.")
    Component(module_metrics, "Metrics", "Component", "Metrics layer.")
    Component(module_security, "Security", "Component", "Security layer.")
    Component(module_infrastructure, "Infrastructure", "Component", "Infrastructure layer.")
    Component(module_legacy_moove, "<DEPRECATED> Legacy Moove", "Component", "Application and Services Legacy Layer.")
    Component(module_legacy_repository, "<DEPRECATED> Legacy Repository", "Component", "Legacy domain layer.")

    Component(controller, "Controller", "Spring Rest Controller", "It has the build Controllers, Circle, ConfigurationV2, DeploymentV2, ModuleV2, RoleV2, UserGroupV2, UserV2, WorkspaceV2, Webhook.")
    Component(respository_jpa, "Repository", "Repository, JPA", "")
    Component(interactor, "Interactor", "Bean", "Use Cases implementations")
    Component(respository_jdbc, "Repository", "Repository, JDBC Template", "")
    Component(service, "Service", "Bean", "")
    Component(thirdy_service, "Thirdy Service", "Bean", "CircleMatcher, Deploy (Butler), Git, Hermes, Keycloack, Villager.")
    Component(legacy_controller, "Legacy Controller", "Spring Rest Controller", "It has the V1 Controllers")
    Component(legacy_service, "Legacy Service", "Bean", "")
    Component(metric_service_factory, "Metric Service Factory", "Bean", "")
    Component(keycloack_service, "Keycloack Service", "Bean", "")
    Component(api_client, "API Client", "API integration", "CircleMatcher, Deploy (Butler), Git, Hermes, Keycloack, Villager")

    Rel(module_web, module_api, "It uses")
    Rel(module_api, controller, "It has")
    Rel(controller, module_application, "It uses")
    Rel(module_application, interactor, "It has")
    Rel(interactor, module_domain, "It uses")
    Rel(module_domain, respository_jdbc, "It has")
    Rel(module_domain, thirdy_service, "It has")
    Rel(thirdy_service, module_infrastructure, "It uses")
    Rel(module_infrastructure, api_client, "It has")
    Rel(api_client, circle_matcher_api, "Makes the request via HTTPS/JSON")
    Rel(api_client, butler_api, "Makes the request via HTTPS/JSON")
    Rel(api_client, hermes_api, "Makes the request via HTTPS/JSON")
    Rel(api_client, villager_api, "Makes the request via HTTPS/JSON")
    Rel(api_client, keycloack_api, "Makes the request via HTTPS/JSON")
    Rel(module_application, service, "It has")
    Rel(interactor, service, "It uses")
    Rel(service, module_domain, "It uses")
    Rel(service, module_security, "It uses")
    Rel(service, git_api, "Makes the request via HTTPS/JSON")
    Rel(module_security, keycloack_service, "It has")
    Rel(keycloack_service, keycloack_api, "Makes the request via HTTPS/JSON")
    Rel(module_metrics, metric_service_factory, "It has")
    Rel(metric_service_factory, prometheus, "Makes the request via HTTPS/JSON")
    Rel(module_web, module_legacy_moove, "It uses")
    Rel(module_legacy_moove, legacy_controller, "It has")
    Rel(legacy_controller, legacy_service, "It uses")
    Rel(legacy_service, keycloack_api, "Makes the request via HTTPS/JSON")
    Rel(module_legacy_moove, module_legacy_repository, "It uses")
    Rel(module_legacy_repository, respository_jpa, "It has")
    Rel(respository_jpa, moove_database, "Reads and writes in")
    Rel(respository_jdbc, moove_database, "Reads and writes in")
}

Rel(ui, module_api, "Makes the request", "JSON/HTTPS")

@enduml
