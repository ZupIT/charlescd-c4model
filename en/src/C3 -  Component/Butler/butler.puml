@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()

Container(ui, "CharlesCD-UI", "ReacjJS, Typescript", "Web Application: Product's interface")
Container(moove, "CharlesCD-Moove", "Kotlin, SpringBoot", "API Application: Process and stores information about users, applications and configurations in general in the database. It orchestrates the requests for other applications.")
Container(git_api, "Git API", "Rest API", "Search for repositories resources.")
Container(kubernetes_api, "Kubernetes API", "Rest API", "Access information and requests changes in Kubernetes cluster.")
Container(moove_api, "Moove API", "Rest API", "It performs status updates about the deployments.")
Container(butler_database, "Butler Database", "Postgres", "Stores information about Deployments, Executions and Logs.")

Container_Boundary(charlescd_butler, "CharlesCD Butler"){
   
    Component(deployment_pipes, "Deployment Pipes", "Nest Pipe", "It performs validations before requests. It has the pipes: GitTokenDecryption, DeploymentUniqueness, DefaultCircleUniqueness, NamespaceValidaiton, JoiValidation.")
    Component(deployment_controller, "Deployment Controller", "Nest Controller", "Allows users to make deployment, undeployment, and view logs of each of these operations.")
    Component(deployment_use_case, "Deployment Use Case", "Nest Provider", "Provides features like save deployment, compile helm manifests, apply/update/delete custom resource on cluster, logs, send callback. It has the UseCases: FindDeployment, CreateDeploy, CreateUndeploy.")

    Component(deployment_hook_controller, "Deployment Hook Controller", "Nest Controller", "Receives information about the current deployment state and sends the state you want to the operator synchronize and reconcile.")
    Component(reconcile_deployment_use_case, "Reconciale Deployment Use Case", "Nest Provider", "Provides features like verify if the if deployment is healthy, send successful deploy callback and return to operator manifests that must be applied in the cluster.")

    Component(route_hooks_controller, "Route Hooks Controller", "Nest Controller", "Receives information about the current state of components routes and send the state you want to the operator synchronize and reconcile.")
    Component(routes_hook_deployment_use_case, "Routes Hook Deployment Use Case", "Nest Provider", "Provides features like checking the route status and sends to the operator the state you want and through manifests that must be applied in the cluster.")
    
    Component(time_scheduler, "Time Scheduler", "Cron", "Periodically checks if the deployment has exceeded the set time limit and notifies Moove.")

    Component(helm_binary, "Helm Binary", "Kubernates Package Management", "Calls git API to fetch templates from repository, compile and transform into YAML manifests.")
    Component(kubernetes_client, "Kubernetes Client", "Client API", "Integration with Kubernetes API to apply/delete/fetch resources.")
    Component(butler_repository, "Moove Repository", "Database Repository", "Access the information the database needs.")
    
    
    Rel(deployment_pipes, deployment_controller, "Use")
    Rel(deployment_controller, deployment_use_case, "Use")
    Rel(deployment_use_case, helm_binary, "Use (only in the creation).")
    Rel(deployment_use_case, kubernetes_client, "Use")
    Rel(deployment_use_case, butler_repository, "Use")
    Rel(deployment_use_case, moove_api, "Makes the request via HTTPS/JSON (only undeployment).")
    Rel(helm_binary, git_api, "Makes the request via HTTPS/JSON")
    Rel(kubernetes_client, kubernetes_api, "Makes the request via HTTPS/JSON")

    Rel(deployment_hook_controller, reconcile_deployment_use_case, "Use")
    Rel(reconcile_deployment_use_case, moove_api, "Makes the request via HTTPS/JSON")
    Rel(reconcile_deployment_use_case, butler_repository, "Use")
    
    Rel(route_hooks_controller, routes_hook_deployment_use_case, "Use")
    Rel(routes_hook_deployment_use_case, butler_repository, "Use")

    Rel(time_scheduler, moove_api, "Makes the request via HTTPS/JSON")
   
    Rel(butler_repository, butler_database, "Reads and writes in (TypeORM)")
   
}

Rel(moove, deployment_controller, "Makes the request", "JSON/HTTPS")
Rel(moove, deployment_hook_controller, "Makes the request", "JSON/HTTPS")
Rel(moove, route_hooks_controller, "Makes the request", "JSON/HTTPS")

Rel(ui, moove, "Makes the request", "JSON/HTTPS")
@enduml
