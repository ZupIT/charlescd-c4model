@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT() 

Container(ui, "CharlesCD-UI", "ReacjJS, Typescript", "Web Application: Product's interface")
Container(moove, "CharlesCD-Moove", "Kotlin, SpringBoot", "API Application: Process and stores in the database the applications, general settings and user's information. It orchestrates the requests to other applications.")
Container(prometheus, "Prometheus", "System Monitoring", "Collects and stores Charles metrics.")
Container(datasource, "Datasource", "Prometheus or Google Analytics", "Collects and stores applications metrics.")
Container(moove_database, "Moove Database", "Postgres", "Stores information about Users, User Groups, Systemic Token, Permissions, Roles, Workspaces, Components, Modules, Builds, Deployments, Circles, Metrics Settings and Deploy Environment Settings.")
Container(compass_database, "Compass Database", "Postgres", "Stores information about datasources, actions, group-actions, metric-group-actions")

Container_Boundary(charlescd_compass, "CharlesCD Compass"){
   
    Component(middleware, "Middleware", "Middleware", "Authorizes requests.")
    Component(casbin, "Casbin", "Access Control Lib", "It performs permission validations according to defined rules.")

    Component(datasource_api, "Data Source API", "Http Handler, Use Case", "Provides data source manipulation functionalities, such as create, delete, fetch metrics associated with the data source, and then testing a connection to a data source.")
    Component(action_api, "Action API", "Http Handler, Use Case", "Authorizes the request using an authorization token or header.")
    Component(metrics_group_api, "Metrics Group API", "Http Handler, Use Case", "Provides metrics group manipulation features such as create, delete and search.")
    Component(metrics_api, "Metrics API", "Http Handler, Use Case", "Provides features to manipulate metrics, like create, delete and search.")
    Component(group_actions_api, "Group Actions API", "Http Handler, Use Case", "Provides features to handle action group, like create, delete and search.")
    Component(plugins_api, "Plugin API", "Http Handler, Use Case", "List the available plugins.")
    Component(circle_api, "Circles API", "Http Handler, Use Case", "List the groups metrics in a circle.")

    Component(compass_repository, "Compass Repository", "Database Repository, GORM", "Engloba os repositories datasources, actions, group-actions, metric-group-actions.")

    Component(moove_client, "Moove Client", "Client API", "Searches for a permission of the user's request.")

    Component(action_plugin, "Action Plugin", "Plugin", "Allows actions to perform within Charles according to metrics.")
    Component(action_deploy_plugin, "Deploy Action", "Service", "Requests to deploy in a circle according to the registered action.")
    Component(action_undeploy_plugin, "Undeploy Action", "Service", "Request to undeploy in a circle according to the registered action.")

    Component(datasource_plugin, "Datasource Plugin", "Plugin", "Allows the integration and collects information in a data source.")
    Component(datasource_prometheus_plugin, "Prometheus Datasource", "Service", "Integrates and gets information in Prometheus.")
    Component(datasource_ga_plugin, "Google Analytics", "Google Analytics Datasource", "Integrates and gets information in Google Analytics.")

    Component(metric_dispatcher, "Metric Dispatcher", "Goroutine", "Synchronizes the metrics values in the data source with the one in the database.")
    Component(action_dispatcher, "Action Dispatcher", "Goroutine", "Checks the metrics to trigger an action, if necessary.")

    Rel(middleware, casbin, "It uses")
    Rel(middleware, moove_client, "It uses")

    Rel(datasource_api, compass_repository, "It uses")
    Rel(action_api, compass_repository, "It uses")
    Rel(metrics_group_api, compass_repository, "It uses")
    Rel(metrics_api, compass_repository, "It uses")
    Rel(group_actions_api, compass_repository, "It uses")
    Rel(plugins_api, compass_repository, "It uses")
    Rel(circle_api, compass_repository, "It uses")

    Rel(compass_repository, moove_database, "It uses")
    Rel(compass_repository, compass_database, "It uses")

    Rel(action_plugin, action_deploy_plugin, "It has")
    Rel(action_plugin, action_undeploy_plugin, "It has")
    Rel(action_deploy_plugin, moove_client, "It uses")
    Rel(action_undeploy_plugin, moove_client, "It uses")

    Rel(action_dispatcher, action_plugin, "It uses")
    Rel(action_dispatcher, compass_repository, "It uses")
    
    Rel(datasource_plugin, datasource_prometheus_plugin, "It has")
    Rel(datasource_plugin, datasource_ga_plugin, "It has")
    Rel(datasource_prometheus_plugin, datasource, "Makes the request via HTTPS/JSON")
    Rel(datasource_ga_plugin, datasource, "Makes the request via HTTPS/JSON")
    Rel(metric_dispatcher, datasource_plugin, "It uses")

    Rel(moove_client, moove, "Makes the request via HTTPS/JSON")
   
}

Rel(ui, moove, "Makes the request", "JSON/HTTPS")
Rel(ui, action_api, "Makes the request", "JSON/HTTPS")
Rel(ui, metrics_group_api, "Makes the request", "JSON/HTTPS")
Rel(ui, group_actions_api, "Makes the request", "JSON/HTTPS")
Rel(ui, plugins_api, "Makes the request", "JSON/HTTPS")
Rel(ui, circle_api, "Makes the request", "JSON/HTTPS")
Rel(moove, datasource_api, "Makes the request", "JSON/HTTPS")
Rel(prometheus, metrics_api, "Makes the request", "JSON/HTTPS")

@enduml
