@startuml c2
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()
LAYOUT_LEFT_RIGHT()

Container(ui, "CharlesCD-UI", "ReacjJS, Typescript", "Web Application: Product's interface")
Container(moove, "CharlesCD-Moove", "Kotlin, SpringBoot", "API Application: Process and stores in the database the applications, general settings and user's information. It orchestrates the requests to other applications.")
Container(registry_api, "Registry API", "DockerHub, AWS ECR, Azure ECR, GCR, Harbor", "Stores and make images available.")
Container(villager_database, "Villager Database", "Postgres", "Stores users' registry configuration data.")

Container_Boundary(charlescd_villager, "CharlesCD Villager"){
   
    Component(docker_request_handler, "Docker Request Handler", "Request Handler", "Performs creation/deletion/update/connection test of a registry setting.")
    Component(docker_registry_resource, "Docker Registry Resource", "Quarkus Resource", "Allows the  creation/deletion/update/connection test of a registry setting.")
    Component(docker_registry_interactor, "Docker Registry Interactor", "Quarkus UseCase/Bean", "Performs creation/deletion/update/connection test of a registry setting.")

    Component(docker_registry_client, "Docker Registry Client", "Client API", "Access to the Registry's API.")
    Component(villager_repository, "Villager Repository", "Database Repository", "Database access. It has the repositories: DockerRegistryConfiguration, Module, Component, Build.")

    Component(build_resource, "<DEPRECATED> Build Resource", "Quarkus Resource", "Allows builds creation (hypothesis board)")
    
    Rel(docker_request_handler, docker_registry_resource, "It uses")
    Rel(docker_registry_resource, docker_registry_interactor, "It uses")
    Rel(docker_registry_interactor, docker_registry_client, "It uses") 
    Rel(docker_registry_interactor, villager_repository, "It uses")
    Rel(docker_registry_client, registry_api, "Makes the request via HTTPS/JSON")
    Rel(villager_repository, villager_database, "Reads and writes in (JPA)")

    Rel(build_resource, villager_repository, "It uses")
   
}

Rel(moove, docker_registry_resource, "Makes the request", "JSON/HTTPS")
Rel(ui, moove, "Makes the request", "JSON/HTTPS")
@enduml
